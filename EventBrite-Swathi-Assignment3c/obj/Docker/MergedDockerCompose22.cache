name: dockercompose17831031165718951826
services:
  WebMvc:
    build:
      context: C:\Pivot\Projects\EventBrite\WebMvc
      dockerfile: Dockerfile
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: WebMvc
    container_name: eventwebshop
    depends_on:
      cart:
        condition: service_started
      eventcatalogapi:
        condition: service_started
      order:
        condition: service_started
      tokensqlserver:
        condition: service_started
    entrypoint:
    - tail
    - -f
    - /dev/null
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      CallBackUrl: http://localhost:7502
      CartUrl: http://cart
      EventCatalogUrl: http://eventcatalogapi
      IdentityUrl: http://192.168.0.10:7900
      Orderurl: http://order
      StripePrivateKey: sk_test_51MWCorIYUWAtVitT0fFaWH27ZC0WprqqEVJKTJ6KijoYtHTMM4EoTltIJm8SBn0ZEsos7Ks8QmIcF38K5BAj3cT300G21VRTZ9
      StripePublicKey: pk_test_51MWCorIYUWAtVitTZGCTfwwdJevXCLfOIXdx1B4aM79JNQQCwbJtj5lJ7KlHRs6iqj0Cazpw2syAteActWanIkRv00UgmoFQFH
    image: eventbrite/webmvc
    labels:
      com.microsoft.visual-studio.project-name: WebMvc
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /root/.nuget/packages
        --additionalProbingPath /root/.nuget/fallbackpackages  "/app/WebMvc.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof
        dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      frontend: null
    ports:
    - mode: ingress
      target: 80
      published: "7502"
      protocol: tcp
    tty: true
    volumes:
    - type: bind
      source: C:\Users\v-swchop\vsdbg\vs2017u5
      target: /remote_debugger
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\v-swchop\AppData\Roaming/ASP.NET/Https
      target: /root/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\v-swchop\AppData\Roaming/Microsoft/UserSecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
  basket.data:
    container_name: eventbasketdata
    image: redis
    networks:
      backend: null
    ports:
    - mode: ingress
      target: 6379
      published: "7051"
      protocol: tcp
  cart:
    build:
      context: C:\Pivot\Projects\EventBrite\CartApi
      dockerfile: Dockerfile
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: CartApi
    container_name: eventscartapi
    depends_on:
      basket.data:
        condition: service_started
      rabbitmq:
        condition: service_started
      tokenserver:
        condition: service_started
    entrypoint:
    - tail
    - -f
    - /dev/null
    environment:
      ConnectionString: basket.data
      IdentityUrl: http://192.168.0.10:7900
    image: eventbrite/cartapi
    labels:
      com.microsoft.visual-studio.project-name: CartApi
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /root/.nuget/packages
        --additionalProbingPath /root/.nuget/fallbackpackages  "/app/CartApi.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof
        dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      backend: null
      frontend: null
    ports:
    - mode: ingress
      target: 80
      published: "7009"
      protocol: tcp
    tty: true
    volumes:
    - type: bind
      source: C:\Users\v-swchop\vsdbg\vs2017u5
      target: /remote_debugger
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\v-swchop\AppData\Roaming/ASP.NET/Https
      target: /root/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\v-swchop\AppData\Roaming/Microsoft/UserSecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
  eventcatalogapi:
    build:
      context: C:\Pivot\Projects\EventBrite\EventCatalogAPI
      dockerfile: Dockerfile
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: EventCatalogAPI
    container_name: eventbriteeventcatalogapi
    depends_on:
      mssqlserver:
        condition: service_started
    entrypoint:
    - tail
    - -f
    - /dev/null
    environment:
      ConnectionString: Data Source=mssqlserver;Initial Catalog=EventCatalogDB;User
        Id=sa;Password=ProductApi123(!);Connect Timeout=30;TrustServerCertificate=false;Encrypt=false;
      ExternalBaseUrl: http://localhost:7001
    image: eventbrite/eventcatalogapi
    labels:
      com.microsoft.visual-studio.project-name: EventCatalogAPI
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /root/.nuget/packages
        --additionalProbingPath /root/.nuget/fallbackpackages  "/app/EventCatalogAPI.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof
        dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      backend: null
      frontend: null
    ports:
    - mode: ingress
      target: 80
      published: "7001"
      protocol: tcp
    tty: true
    volumes:
    - type: bind
      source: C:\Users\v-swchop\vsdbg\vs2017u5
      target: /remote_debugger
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\v-swchop\AppData\Roaming/ASP.NET/Https
      target: /root/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\v-swchop\AppData\Roaming/Microsoft/UserSecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
  mssqlserver:
    container_name: eventbritesqlserver
    environment:
      ACCEPT_EULA: "true"
      MSSQL_SA_PASSWORD: ProductApi123(!)
      SA_PASSWORD: ProductApi123(!)
    image: mcr.microsoft.com/mssql/server:latest
    networks:
      backend: null
    ports:
    - mode: ingress
      target: 1433
      published: "1498"
      protocol: tcp
  order:
    build:
      context: C:\Pivot\Projects\EventBrite\OrderApi
      dockerfile: Dockerfile
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: OrderAPI
    container_name: eventsorderapi
    depends_on:
      ordersqlserver:
        condition: service_started
      rabbitmq:
        condition: service_started
      tokenserver:
        condition: service_started
    entrypoint:
    - tail
    - -f
    - /dev/null
    environment:
      ConnectionString: Data Source=ordersqlserver;Initial Catalog=OrdersDb;User Id=sa;Password=ProductApi123(!);Connect
        Timeout=30;TrustServerCertificate=false;Encrypt=false;
      IdentityUrl: http://192.168.0.10:7900
    image: eventbrite/orderapi
    labels:
      com.microsoft.visual-studio.project-name: OrderAPI
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /root/.nuget/packages
        --additionalProbingPath /root/.nuget/fallbackpackages  "/app/OrderAPI.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof
        dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      backend: null
      frontend: null
    ports:
    - mode: ingress
      target: 80
      published: "7021"
      protocol: tcp
    tty: true
    volumes:
    - type: bind
      source: C:\Users\v-swchop\vsdbg\vs2017u5
      target: /remote_debugger
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\v-swchop\AppData\Roaming/ASP.NET/Https
      target: /root/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\v-swchop\AppData\Roaming/Microsoft/UserSecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
  ordersqlserver:
    container_name: eventsordersqlserver
    environment:
      ACCEPT_EULA: "true"
      MSSQL_SA_PASSWORD: ProductApi123(!)
      SA_PASSWORD: ProductApi123(!)
    image: mcr.microsoft.com/mssql/server:latest
    networks:
      backend: null
    ports:
    - mode: ingress
      target: 1433
      published: "1450"
      protocol: tcp
  rabbitmq:
    container_name: rabbitmq
    hostname: myrabbitmq
    image: rabbitmq:3
    networks:
      backend: null
    ports:
    - mode: ingress
      target: 15672
      published: "15672"
      protocol: tcp
    - mode: ingress
      target: 5672
      published: "5672"
      protocol: tcp
    - mode: ingress
      target: 5671
      published: "5671"
      protocol: tcp
  tokenserver:
    build:
      context: C:\Pivot\Projects\EventBrite\TokenServiceAPI
      dockerfile: Dockerfile
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: TokenServiceAPI
    container_name: eventbritetokenapi
    depends_on:
      tokensqlserver:
        condition: service_started
    entrypoint:
    - tail
    - -f
    - /dev/null
    environment:
      ConnectionString: Data Source=tokensqlserver;Initial Catalog=TokenServiceDb;User
        Id=sa;Password=ProductApi123(!);Connect Timeout=30;TrustServerCertificate=false;Encrypt=false;
      MvcClient: http://localhost:7502
    image: eventbrite/tokenapi
    labels:
      com.microsoft.visual-studio.project-name: TokenServiceAPI
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /root/.nuget/packages
        --additionalProbingPath /root/.nuget/fallbackpackages  "/app/TokenServiceAPI.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof
        dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      backend: null
      frontend: null
    ports:
    - mode: ingress
      target: 80
      published: "7900"
      protocol: tcp
    tty: true
    volumes:
    - type: bind
      source: C:\Users\v-swchop\vsdbg\vs2017u5
      target: /remote_debugger
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\v-swchop\AppData\Roaming/ASP.NET/Https
      target: /root/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\v-swchop\AppData\Roaming/Microsoft/UserSecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
  tokensqlserver:
    container_name: eventstokensqlserver
    environment:
      ACCEPT_EULA: "true"
      MSSQL_SA_PASSWORD: ProductApi123(!)
      SA_PASSWORD: ProductApi123(!)
    image: mcr.microsoft.com/mssql/server:latest
    networks:
      backend: null
    ports:
    - mode: ingress
      target: 1433
      published: "1428"
      protocol: tcp
networks:
  backend:
    name: dockercompose17831031165718951826_backend
  frontend:
    name: dockercompose17831031165718951826_frontend